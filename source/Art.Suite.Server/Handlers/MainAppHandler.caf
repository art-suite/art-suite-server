import &StandardImport, {} &Url

class MainAppHandler extends PromiseHandler
  @handleUrlRegex ///i ^/ (\?.*)? $

  ##
    config.metadata:
      icons: map from image-sizes to asset-paths
  handleHtmlRequest: (request, requestData) ->
    config.metadata extract? title, description, image, imageWidth, imageHeight, icons, tags
    title ?=
      upperCamelCase
        config.app.toString()
        .split /^Neptune\./
        [0]
        .join ' '
        ' '

    tags = merge
      if present description
        description:            description
        "twitter:description":  description
        "og:description":       description
      apple-mobile-web-app-capable:           :yes
      apple-mobile-web-app-status-bar-style:  :black

      "og:title":       title
      "og:url":         url
      "og:type":        type
      "twitter:title":  title
      "twitter:card":   type

      if present image
        image = Url.resolve
          url
          image

        "og:image":        image
        "og:image:width":  if imageWidth then imageWidth
        "og:image:height": if imageHeight then imageHeight
        "twitter:image":   image

      tags

    url =
      Url.format {}
        protocol: :https
        host:     lowerCase request.get :host
        pathname: request.path

    type = :website

    bestAppleTouchIconSize = null
    each icon, size in icons
      if (size |= 0) >= 180
        bestAppleTouchIconSize = min
          bestAppleTouchIconSize ? size
          size

    "" <!DOCTYPE html>
    + Html
      Head
        Meta charset: :utf-8
        Title title

        if size = bestAppleTouchIconSize
          Link rel: :apple-touch-icon href: icons[size], type: :image/png sizes: "#{size}x#{size}"

        array icon, size in icons
          Link rel: :icon href: icon, type: :image/png sizes: "#{size}x#{size}"

        array content, name in tags
          Meta
            if /^og:/.test name then  {} content, property: name
            else                      {} content, name

      Body
        Script
          """
            self.artConfig = #{jsStringify config.clientArtConfig};
            self.artConfigName = '#{&ArtConfig.configName || :Production}';

        Script
          async:    true
          src:      cacheSafeUrl :Client.js
          charset:  :utf-8
