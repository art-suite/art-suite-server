import &StandardImport, {} &Url

class MainAppHandler extends PromiseHandler
  @handleUrlRegex ///i ^/ (\?.*)? $

  handleHtmlRequest: (request, requestData) ->
    config.metadata extract? title, description, image, imageWidth, imageHeight
    title ?=
      upperCamelCase
        config.app.toString()
        .split /^Neptune\./
        [0]
        .join ' '
        ' '

    url =
      Url.format {}
        protocol: :https
        host:     lowerCase request.get :host
        pathname: request.path

    type = :website

    "" <!DOCTYPE html>
    + Html
      Head
        Meta charset: :utf-8
        Title title
        Meta property: :og:title      content: title
        Meta property: :og:url        content: url
        Meta property: :og:type       content: type

        Meta property: :twitter:title content: title
        Meta property: :twitter:card  content: type

        if present description then []
          Meta name:      :description          content: description
          Meta property:  :og:description       content: description
          Meta name:      :twitter:description  content: description

        if present image
          image = Url.resolve
            url
            image
          []
            Meta property:  :og:image             content: image
            Meta property:  :og:image:width       content: image if imageWidth
            Meta property:  :og:image:height      content: image if imageHeight
            Meta name:      :twitter:image        content: image

      Body
        Script
          """
            self.artConfig = #{jsStringify config.clientArtConfig};
            self.artConfigName = '#{&ArtConfig.configName || :Production}';

        Script
          async:    true
          src:      cacheSafeUrl :Client.js
          charset:  :utf-8
